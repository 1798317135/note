# 1.0 虚拟环境 是指模仿 python 全局环境 的局部的 独立 的python环境
# 2.0 根据每个项目 所创建的完全独立,隔离的环境
# 3.0 可以安装 独立包 和 解释器
# 4.0 需要用到一个三方包来操作 虚拟环境
# --- virtualenv
#     1.0 创建一个虚拟环境
#         --- virtualenv 语法
#             cd 先进入到这个虚拟环境的文件夹里面
#             然后 virtualenv 虚拟名字
#         --- virtualenv -p xxxx 
#             这样可以指定 创建的虚拟环境的python 版本
#         --- virtualenv -system-site-packages ENV
#             这样创建出来的虚拟环境的三方库与 全局环境的三方库
#             联通 如果在虚拟环境下没有找到 那个库 就会到 全局里面 去找
#               
#     2.0 激活虚拟环境
#           先进入 虚拟环境下的script文件夹
#           
#          执行虚拟环境下
#          script 文件夹的 activete.bat 文件
#          可以激活这个虚拟环境
#          在激活状态下 调用的库 和 文件 都是用虚拟环境的 解释器来执行的
#          
#     3.0 在激活的状态下，想干什么干什么
#          我们在激活的虚拟环境下 如果想操作虚拟环境
#          需要先进入虚拟环境的根文件夹../../
#          然后才可以进行操作
#          
#     4.0 退出虚拟环境
#         推出虚拟环境 
#         第一步进入到 虚拟环境中的script 文件夹下面
#         第二部 执行黎曼的deactivate 文件 
#         第三部 退出 虚拟环境的 script文件
#         然后所执行的都是全局的python 解释器
#         
#     5.0删除虚拟环境
#     如果想删除虚拟环境 直接把虚拟环境的文件夹删除就可以了
#     
#  --- 补充 
#       1.0 项目和虚拟环境 是多对多的关系
#           也就是说 一个项目可以 开启切换多个虚拟环境
#           一个虚拟环境 也可以执行 多个项目
#       2.0 如果要迁移项目  
#           我们只需要把 项目和 冻结的需求文本 给调走就可以了
#           并不需要 把三方库也 复制 因为 很大
#        
#       3.0 我们拿到项目的文件 和 需求冻结文本 之后 来重新安装这个项目
#           1.0 在项目的目录里里面 创建一个虚拟环境 避免污染 全局 环境
#           2.0 进入到这个虚拟环境的script文件里面
#           3.0 执行activate 激活虚拟环境
#           4.0 执行pip instal -r xxx 安装 需求文本指定的 三方库
import