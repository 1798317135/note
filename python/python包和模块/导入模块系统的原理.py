
########################### 第一次导入模块 ##################################
#
## 1.0 当我们第一次 导入一个模块的时候 系统会 自动运行这三个 步骤
#     --- 1.1 执行 被导入 模块当前的命名空间内部的所有代码
#     
#     --- 2.0 第二部 创建一个模块对象 把这个模块里面的顶级 变量 和 属性 绑定到 这个模块对象 上面
#             顶层对象是指，模块内部的全局变量 和 属性
#     
#     --- 3.0 在import 引入 这个模块对象的后面  拥有这个对象的命名空间

import 自定义模块.m2 as m
print(id(m))
# dir() 可以查看对象里面所有的 属性 和方法
print(dir("module"))
# 这是一个 model 类型的对象 
print(type(m))
# print(m.__doc__)
# print(m.__all__)
# print(m.__file__)
# print(m.__name__)
# print(m.__package__)
# print(dir(m))

########################### 第二次导入模块的时候  ################################
#
# 1.0 当在一个模块中 第二次导入 模块的时候 不会再去创建这个模块对象了 
#     直接拿上面的已经 创建好的 模块对象 使用
# 2.0 会直接执行 第三步 引入这个对象的命名空间 在 后面可以使用这个命名空间里面的 属性 和 方法
# 
import 自定义模块 .m2



####################################  注意 ######################################
#
# 1.0 注意 在哪个作用域，下导入模块对象，那么这个模块对象 就只在哪个作用域下使用
num = 1
def test():
    import 自定义模块.m3 as m1
    print(m1.age)
    print(num)









