# ################################# 类方法的创建 ###########################
# 
# 
# # 1.0 类方法是有@classmathed装饰器后面装饰的方法
# 
# 2.0 类方法至少有一个形参，并且这个形参传入的值是一个类
#  
class Persen:
    @classmethod
    def run(cla,a):
        print(a,cla)
        return cla

# *************** 类方法的调用
# 
# --- 用类名，实例，和类的子集 去调用
#     1.0 如果调用者是一个类 那么系统会自动把这个类 传递给类方法的第一个参数
#         我们直接可以给后面的参数赋值即可
#     2.0 如果调用者是一个实例化对象，那么系统会自动寻找到这个实例化这个对象的类
#          并把这个类 传递给类方法的第一个参数
#     3.0 如果调用者是一个类的子类，那么会把这个子集类传递给第一个参数
#     
#     4.0 因为类方法 传递的是调用他的类 所以 这个类只能访问类属性 不能访问实例属性
#
Persen.run("这是一个类方法")
# Ture 说明系统传递过去的是调用这个放大的类，谁调用就把谁的类传递给第一个参数
print(Persen.run("呵呵")==Persen)

bruce = Persen()
bruce.run("用实例调用")
# 返回的是这个实例化的类
print(bruce.run("AA") == Persen)

class Persen1(Persen):
    pass
# 返回的是这个子类
Persen1.run("AA") 

# --- 赋值给一个变量使用
aa = Persen.run
aa("bb")          