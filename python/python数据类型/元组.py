# #################################### 元组的定义 #####################################
# 
# 1.0 元祖指有序不可变的集合
# 2.0 和列表类似 区别在于元组是不可变的 
# 
# *************** 元祖的定义 *************
# 
# --- 1.0 第一种 (,) 如果一个元素必须加上一个逗号
t = (1,)
print(type(t))

# --- 2.0 加 ,
# 
t = 1,2,3,"aa"
print(type(t))

# --- 3.0 元组可以是多类型的元素
# 
t = (1,["aa"],(1,2),"aa")
print(type(t))

# --- 把可迭代对象转换为元祖用tuple(iterable)

arr = [1,2,3,4,5]
result = tuple(arr)
print(arr,result,"tuple()")

# ####################################### 元组常用操 #####################################
# --- 1.0 元祖没有曾 删 改相应操作 
# 
t = (1,2,32,4)
l = [1,2,3,4,5]
# t[0] = 2
# del t[1]

# --- 2.0 元组可以查询 查询的方法和列表的查询方法类似
tup = tuple(l)
print(tup[1],tup[0])

# --- 3.0 用切片的方法去查询元祖
#
print(tup[-1:-3:-1])
print(tup[0:len(tup):1])

# ####################################### 元素的额外操作 ###################################
# 
tup = (1,2,3,44,56,6,7,32,2,3)
print(tup)

# ***************** 获取 *******************
# 
# --- tup.count(value) 对象方法，获取指定元素在元组里的出现次数 和列表 字符串的区别是不能指定区间
# --- 如果没有找到，打印 0
# 
print(tup.count(3),"count()")

# --- tup.index(value,[start,[stop]]) 对象方法 ，获取指定元素的索引
# 
print(tup.index(3), "index()")

# --- len(object) 内置方法 可以计算元素的元素个数
print(len(tup),"len()")

# --- max(iterable, *, default, key)内置方法
#  可以计算可迭代对象中最大的元素 但是元素必须是纯数字类型

Max = max(tup)
print(max(tup),"max()")

# --- min(iterable, *, default, key)内置方法 
# 可以取出可迭代对象的最小元素 前提是元素必须是纯数组
# 
Min = min(tup)
print(Min,"min()")


# ***************** 判定 ****************
# 
# 和list的判定类似 用 in判定是否包含 或者 not in是否没有包含
# 
tup = (1,2,3,4,5,6,7)
print(7 in tup,"in")
print(7 not in tup,"not in")
# 
# ***************** 比较 ****************
# 
# 和list 比较类似 python3版本往后都用 > < =比较符进行比较 python2 用cmp()进行比较
# 比较的需要是同一类型
# 
tup1 = (1,2,3,4,5)
tup3 = (1,2,3,4,5)
tup2 = ("aa")
tup4 = (5,6,7,8)
print(tup1 == tup3,"==")
print(tup3 > tup4 ,">")
# 
# 
# ***************** 拼接 *******************
# 
#同一种类型的数据可以进行相加 + 
print("asdf"+"werq","字符串的拼接+")
print([1,2,3]+["aa",123],"数组的拼接 +")
print((1,2,3)+(4,"aa"),"元组的拼接")
# 
# 乘法和字符串的乘法，列表的乘法类似
print((1,2,"aa")*5,"元组的乘法")
print("aasdf323"*5,"字符串的乘法")
print([1,2,3,45]*5,"列表的乘法")

# ***************** 拆包 ********************
# 
# 把元组里面的元素分别取出来赋值给对应的变量
a,b = 10,11
print(a,b)
c = 12
e = 13
# 调换连个变量的值
e,c = (c,e)
print(e,c)